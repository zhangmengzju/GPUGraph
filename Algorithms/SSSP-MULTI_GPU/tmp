nvcc --compiler-bindir /home/zhisong.fzs/openmpi-1.8.5rc1-build/bin/mpicc -c -o BFS.o bfs.cu -O3 -lineinfo -Xcompiler -fopenmp -I. -I../../ -I../../moderngpu2/include -I/opt/mvapich2/gdr/2.0/gnu/include -L/usr/lib/ -L../../moderngpu2 -L../../MPI/generator -gencode=arch=compute_20,code=\"sm_20,compute_20\"  -gencode=arch=compute_30,code=\"sm_30,compute_30\"  -gencode=arch=compute_35,code=\"sm_35,compute_35\"   
./bfs.h(258): warning: variable "is_visited" was declared but never referenced

../../BitmapCompressor/kernels.cuh(394): warning: variable "tid" was declared but never referenced

../../BitmapCompressor/kernels.cuh(463): warning: missing return statement at end of non-void function "storeWords"

../../BitmapCompressor/kernels.cuh(482): warning: integer conversion resulted in a change of sign

../../BitmapCompressor/kernels.cuh(490): warning: integer conversion resulted in a change of sign

../../BitmapCompressor/kernels.cuh(500): warning: integer conversion resulted in a change of sign

../../MPI/wave.h(340): warning: variable "request" was declared but never referenced

../../MPI/wave.h(500): warning: variable "word_size" was declared but never referenced

../../MPI/wave.h(444): warning: variable "request" was declared but never referenced

../../MPI/wave.h(604): warning: variable "myid" was declared but never referenced

../../MPI/wave.h(898): warning: variable "rank_id" was declared but never referenced

bfs.cu(260): warning: variable "outFileName" was set but never used

bfs.cu(278): warning: variable "numEdges" was set but never used

../../GASengine/enactor_vertex_centric.cuh(4236): warning: variable "dummy_frontier_size" was declared but never referenced

../../GASengine/enactor_vertex_centric.cuh(5014): warning: variable "global_size" was declared but never referenced

../../GASengine/enactor_vertex_centric.cuh(3397): warning: variable "startgather" was declared but never referenced
          detected during instantiation of "cudaError_t GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::EnactIterativeSearch(CsrProblem &, CsrProblem::SizeT *, int, int, int *, int, int, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true]" 
bfs.cu(740): here

../../GASengine/enactor_vertex_centric.cuh(3397): warning: variable "endgather" was declared but never referenced
          detected during instantiation of "cudaError_t GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::EnactIterativeSearch(CsrProblem &, CsrProblem::SizeT *, int, int, int *, int, int, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true]" 
bfs.cu(740): here

../../GASengine/enactor_vertex_centric.cuh(3401): warning: variable "elapsedgather" was declared but never referenced
          detected during instantiation of "cudaError_t GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::EnactIterativeSearch(CsrProblem &, CsrProblem::SizeT *, int, int, int *, int, int, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true]" 
bfs.cu(740): here

../../GASengine/vertex_centric/expand_atomic/kernel.cuh(344): error: no instance of function template "GASengine::vertex_centric::expand_atomic::SweepPass<KernelPolicy, Program, WORK_STEALING>::Invoke [with KernelPolicy=GASengine::vertex_centric::expand_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 1, 9, 0, 0, 5, cg, NONE, NONE, cg, NONE, cg, false, 32, 512, 7>, Program=bfs, WORK_STEALING=false]" matches the argument list
            argument types are: (int, bfs::VertexId, bfs::VertexId, int, int, int, int *, bfs::VertexId *, bfs::VertexId *, bfs::VertexId *, bfs::VertexType, bfs::EdgeType, bfs::VertexId *, char *, bfs::VertexId *, bfs::SizeT *, b40c::util::CtaWorkProgress, b40c::util::CtaWorkDistribution<bfs::SizeT>, bfs::SizeT, GASengine::vertex_centric::expand_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 1, 9, 0, 0, 5, cg, NONE, NONE, cg, NONE, cg, false, 32, 512, 7>::SmemStorage)
          detected during:
            instantiation of "void GASengine::vertex_centric::expand_atomic::Dispatch<KernelPolicy, Program, true>::Kernel(int &, GASengine::vertex_centric::expand_atomic::Dispatch<KernelPolicy, Program, true>::VertexId &, GASengine::vertex_centric::expand_atomic::Dispatch<KernelPolicy, Program, true>::VertexId &, int &, int &, int &, int *&, int *&, volatile int *&, GASengine::vertex_centric::expand_atomic::Dispatch<KernelPolicy, Program, true>::VertexId *&, GASengine::vertex_centric::expand_atomic::Dispatch<KernelPolicy, Program, true>::VertexId *&, GASengine::vertex_centric::expand_atomic::Dispatch<KernelPolicy, Program, true>::VertexId *&, GASengine::vertex_centric::expand_atomic::Dispatch<KernelPolicy, Program, true>::VertexType &, GASengine::vertex_centric::expand_atomic::Dispatch<KernelPolicy, Program, true>::EdgeType &, GASengine::vertex_centric::expand_atomic::Dispatch<KernelPolicy, Program, true>::VertexId *&, char *&, GASengine::vertex_centric::expand_atomic::Dispatch<KernelPolicy, Program, true>::VertexId *&, GASengine::vertex_centric::expand_atomic::Dispatch<KernelPolicy, Program, true>::SizeT *&, b40c::util::CtaWorkProgress &, GASengine::vertex_centric::expand_atomic::Dispatch<KernelPolicy, Program, true>::SizeT &, GASengine::vertex_centric::expand_atomic::Dispatch<KernelPolicy, Program, true>::SizeT &, b40c::util::KernelRuntimeStats &) [with KernelPolicy=GASengine::vertex_centric::expand_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 1, 9, 0, 0, 5, cg, NONE, NONE, cg, NONE, cg, false, 32, 512, 7>, Program=bfs]" 
(404): here
            instantiation of "void GASengine::vertex_centric::expand_atomic::Kernel<KernelPolicy,Program>(int, KernelPolicy::VertexId, KernelPolicy::VertexId, int, int, int, int *, int *, volatile int *, Program::VertexId *, Program::VertexId *, Program::MiscType *, Program::VertexType, Program::EdgeType, Program::VertexId *, char *, Program::VertexId *, Program::SizeT *, b40c::util::CtaWorkProgress, KernelPolicy::SizeT, KernelPolicy::SizeT, b40c::util::KernelRuntimeStats) [with KernelPolicy=GASengine::vertex_centric::expand_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 1, 9, 0, 0, 5, cg, NONE, NONE, cg, NONE, cg, false, 32, 512, 7>, Program=bfs]" 
../../GASengine/enactor_vertex_centric.cuh(2784): here
            instantiation of "void GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::expand_dynamic<ExpandPolicy>(CsrProblem::GraphSlice *, int, int, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true, ExpandPolicy=GASengine::vertex_centric::expand_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 1, 9, 0, 0, 5, cg, NONE, NONE, cg, NONE, cg, false, 32, 512, 7>]" 
../../GASengine/enactor_vertex_centric.cuh(3667): here
            instantiation of "cudaError_t GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::EnactIterativeSearch<ExpandPolicy,ContractPolicy>(CsrProblem &, CsrProblem::SizeT *, int, int, int, int, int &, int &, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true, ExpandPolicy=GASengine::vertex_centric::expand_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 1, 9, 0, 0, 5, cg, NONE, NONE, cg, NONE, cg, false, 32, 512, 7>, ContractPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>]" 
../../GASengine/enactor_vertex_centric.cuh(4542): here
            instantiation of "cudaError_t GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::EnactIterativeSearch(CsrProblem &, CsrProblem::SizeT *, int, int, int *, int, int, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true]" 
bfs.cu(740): here

../../GASengine/vertex_centric/expand_atomic/kernel.cuh(416): error: a reference of type "bfs::VertexId *&" (not const-qualified) cannot be initialized with a value of type "bfs::MiscType *"
          detected during:
            instantiation of "void GASengine::vertex_centric::expand_atomic::Kernel<KernelPolicy,Program>(int, KernelPolicy::VertexId, KernelPolicy::VertexId, int, int, int, int *, int *, volatile int *, Program::VertexId *, Program::VertexId *, Program::MiscType *, Program::VertexType, Program::EdgeType, Program::VertexId *, char *, Program::VertexId *, Program::SizeT *, b40c::util::CtaWorkProgress, KernelPolicy::SizeT, KernelPolicy::SizeT, b40c::util::KernelRuntimeStats) [with KernelPolicy=GASengine::vertex_centric::expand_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 1, 9, 0, 0, 5, cg, NONE, NONE, cg, NONE, cg, false, 32, 512, 7>, Program=bfs]" 
../../GASengine/enactor_vertex_centric.cuh(2784): here
            instantiation of "void GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::expand_dynamic<ExpandPolicy>(CsrProblem::GraphSlice *, int, int, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true, ExpandPolicy=GASengine::vertex_centric::expand_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 1, 9, 0, 0, 5, cg, NONE, NONE, cg, NONE, cg, false, 32, 512, 7>]" 
../../GASengine/enactor_vertex_centric.cuh(3667): here
            instantiation of "cudaError_t GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::EnactIterativeSearch<ExpandPolicy,ContractPolicy>(CsrProblem &, CsrProblem::SizeT *, int, int, int, int, int &, int &, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true, ExpandPolicy=GASengine::vertex_centric::expand_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 1, 9, 0, 0, 5, cg, NONE, NONE, cg, NONE, cg, false, 32, 512, 7>, ContractPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>]" 
../../GASengine/enactor_vertex_centric.cuh(4542): here
            instantiation of "cudaError_t GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::EnactIterativeSearch(CsrProblem &, CsrProblem::SizeT *, int, int, int *, int, int, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true]" 
bfs.cu(740): here

../../GASengine/enactor_vertex_centric.cuh(3001): error: no instance of function template "GASengine::vertex_centric::expand_atomic_flag::Kernel" matches the argument list
            argument types are: (volatile long long, const int, const int, int, const int, int, int *, int *, int *, bfs::VertexId *, bfs::VertexId *, bfs::MiscType *, bfs::VertexType, bfs::EdgeType, long, char *, int *, bfs::VertexId *, bfs::SizeT *, b40c::util::CtaWorkProgressLifetime, bfs::SizeT, bfs::SizeT, b40c::util::KernelRuntimeStatsLifetime)
          detected during:
            instantiation of "void GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::expand_dynamic<ExpandPolicy>(CsrProblem::GraphSlice *, int, int, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true, ExpandPolicy=GASengine::vertex_centric::expand_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 1, 9, 0, 0, 5, cg, NONE, NONE, cg, NONE, cg, false, 32, 512, 7>]" 
(3667): here
            instantiation of "cudaError_t GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::EnactIterativeSearch<ExpandPolicy,ContractPolicy>(CsrProblem &, CsrProblem::SizeT *, int, int, int, int, int &, int &, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true, ExpandPolicy=GASengine::vertex_centric::expand_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 1, 9, 0, 0, 5, cg, NONE, NONE, cg, NONE, cg, false, 32, 512, 7>, ContractPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>]" 
(4542): here
            instantiation of "cudaError_t GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::EnactIterativeSearch(CsrProblem &, CsrProblem::SizeT *, int, int, int *, int, int, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true]" 
bfs.cu(740): here

../../GASengine/enactor_vertex_centric.cuh(3046): error: no instance of function template "GASengine::vertex_centric::expand_atomic_flag::Kernel" matches the argument list
            argument types are: (volatile long long, const int, const int, int, const int, int, int *, int *, int *, bfs::VertexId *, bfs::VertexId *, bfs::MiscType *, bfs::VertexType, bfs::EdgeType, bfs::VertexId *, char *, int *, bfs::VertexId *, bfs::SizeT *, b40c::util::CtaWorkProgressLifetime, bfs::SizeT, bfs::SizeT, b40c::util::KernelRuntimeStatsLifetime)
          detected during:
            instantiation of "void GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::expand_dynamic<ExpandPolicy>(CsrProblem::GraphSlice *, int, int, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true, ExpandPolicy=GASengine::vertex_centric::expand_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 1, 9, 0, 0, 5, cg, NONE, NONE, cg, NONE, cg, false, 32, 512, 7>]" 
(3667): here
            instantiation of "cudaError_t GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::EnactIterativeSearch<ExpandPolicy,ContractPolicy>(CsrProblem &, CsrProblem::SizeT *, int, int, int, int, int &, int &, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true, ExpandPolicy=GASengine::vertex_centric::expand_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 1, 9, 0, 0, 5, cg, NONE, NONE, cg, NONE, cg, false, 32, 512, 7>, ContractPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>]" 
(4542): here
            instantiation of "cudaError_t GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::EnactIterativeSearch(CsrProblem &, CsrProblem::SizeT *, int, int, int *, int, int, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true]" 
bfs.cu(740): here

../../GASengine/enactor_vertex_centric.cuh(3126): error: no instance of function template "GASengine::vertex_centric::expand_atomic_flag::Kernel" matches the argument list
            argument types are: (volatile long long, const int, const int, int, const int, int, int *, int *, int *, bfs::VertexId *, bfs::VertexId *, bfs::MiscType *, bfs::VertexType, bfs::EdgeType, long, char *, int *, bfs::VertexId *, bfs::SizeT *, b40c::util::CtaWorkProgressLifetime, bfs::SizeT, bfs::SizeT, b40c::util::KernelRuntimeStatsLifetime)
          detected during:
            instantiation of "void GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::expand_dynamic<ExpandPolicy>(CsrProblem::GraphSlice *, int, int, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true, ExpandPolicy=GASengine::vertex_centric::expand_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 1, 9, 0, 0, 5, cg, NONE, NONE, cg, NONE, cg, false, 32, 512, 7>]" 
(3667): here
            instantiation of "cudaError_t GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::EnactIterativeSearch<ExpandPolicy,ContractPolicy>(CsrProblem &, CsrProblem::SizeT *, int, int, int, int, int &, int &, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true, ExpandPolicy=GASengine::vertex_centric::expand_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 1, 9, 0, 0, 5, cg, NONE, NONE, cg, NONE, cg, false, 32, 512, 7>, ContractPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>]" 
(4542): here
            instantiation of "cudaError_t GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::EnactIterativeSearch(CsrProblem &, CsrProblem::SizeT *, int, int, int *, int, int, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true]" 
bfs.cu(740): here

../../GASengine/enactor_vertex_centric.cuh(3153): error: no instance of function template "GASengine::vertex_centric::expand_atomic_flag::Kernel" matches the argument list
            argument types are: (volatile long long, const int, const int, int, const int, int, int *, int *, int *, bfs::VertexId *, bfs::VertexId *, bfs::MiscType *, bfs::VertexType, bfs::EdgeType, bfs::VertexId *, char *, int *, bfs::VertexId *, bfs::SizeT *, b40c::util::CtaWorkProgressLifetime, bfs::SizeT, bfs::SizeT, b40c::util::KernelRuntimeStatsLifetime)
          detected during:
            instantiation of "void GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::expand_dynamic<ExpandPolicy>(CsrProblem::GraphSlice *, int, int, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true, ExpandPolicy=GASengine::vertex_centric::expand_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 1, 9, 0, 0, 5, cg, NONE, NONE, cg, NONE, cg, false, 32, 512, 7>]" 
(3667): here
            instantiation of "cudaError_t GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::EnactIterativeSearch<ExpandPolicy,ContractPolicy>(CsrProblem &, CsrProblem::SizeT *, int, int, int, int, int &, int &, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true, ExpandPolicy=GASengine::vertex_centric::expand_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 1, 9, 0, 0, 5, cg, NONE, NONE, cg, NONE, cg, false, 32, 512, 7>, ContractPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>]" 
(4542): here
            instantiation of "cudaError_t GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::EnactIterativeSearch(CsrProblem &, CsrProblem::SizeT *, int, int, int *, int, int, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true]" 
bfs.cu(740): here

../../GASengine/enactor_vertex_centric.cuh(3181): error: no instance of function template "GASengine::vertex_centric::expand_atomic_flag::Kernel" matches the argument list
            argument types are: (volatile long long, const int, const int, int, const int, int, int *, int *, int *, bfs::VertexId *, bfs::VertexId *, bfs::MiscType *, bfs::VertexType, bfs::EdgeType, long, char *, int *, bfs::VertexId *, bfs::SizeT *, b40c::util::CtaWorkProgressLifetime, bfs::SizeT, bfs::SizeT, b40c::util::KernelRuntimeStatsLifetime)
          detected during:
            instantiation of "void GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::expand_dynamic<ExpandPolicy>(CsrProblem::GraphSlice *, int, int, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true, ExpandPolicy=GASengine::vertex_centric::expand_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 1, 9, 0, 0, 5, cg, NONE, NONE, cg, NONE, cg, false, 32, 512, 7>]" 
(3667): here
            instantiation of "cudaError_t GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::EnactIterativeSearch<ExpandPolicy,ContractPolicy>(CsrProblem &, CsrProblem::SizeT *, int, int, int, int, int &, int &, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true, ExpandPolicy=GASengine::vertex_centric::expand_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 1, 9, 0, 0, 5, cg, NONE, NONE, cg, NONE, cg, false, 32, 512, 7>, ContractPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>]" 
(4542): here
            instantiation of "cudaError_t GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::EnactIterativeSearch(CsrProblem &, CsrProblem::SizeT *, int, int, int *, int, int, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true]" 
bfs.cu(740): here

../../GASengine/enactor_vertex_centric.cuh(3226): error: no instance of function template "GASengine::vertex_centric::expand_atomic_flag::Kernel" matches the argument list
            argument types are: (volatile long long, const int, const int, int, const int, int, int *, int *, int *, bfs::VertexId *, bfs::VertexId *, bfs::MiscType *, bfs::VertexType, bfs::EdgeType, bfs::VertexId *, char *, int *, bfs::VertexId *, bfs::SizeT *, b40c::util::CtaWorkProgressLifetime, bfs::SizeT, bfs::SizeT, b40c::util::KernelRuntimeStatsLifetime)
          detected during:
            instantiation of "void GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::expand_dynamic<ExpandPolicy>(CsrProblem::GraphSlice *, int, int, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true, ExpandPolicy=GASengine::vertex_centric::expand_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 1, 9, 0, 0, 5, cg, NONE, NONE, cg, NONE, cg, false, 32, 512, 7>]" 
(3667): here
            instantiation of "cudaError_t GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::EnactIterativeSearch<ExpandPolicy,ContractPolicy>(CsrProblem &, CsrProblem::SizeT *, int, int, int, int, int &, int &, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true, ExpandPolicy=GASengine::vertex_centric::expand_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 1, 9, 0, 0, 5, cg, NONE, NONE, cg, NONE, cg, false, 32, 512, 7>, ContractPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>]" 
(4542): here
            instantiation of "cudaError_t GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::EnactIterativeSearch(CsrProblem &, CsrProblem::SizeT *, int, int, int *, int, int, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true]" 
bfs.cu(740): here

../../GASengine/vertex_centric/contract_atomic/kernel.cuh(102): error: no instance of constructor "GASengine::vertex_centric::contract_atomic::Cta<KernelPolicy, Program>::Cta [with KernelPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>, Program=bfs]" matches the argument list
            argument types are: (int, bfs::VertexId, bfs::VertexId, int, int, int *, GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>::SmemStorage, bfs::VertexId *, bfs::VertexId *, bfs::VertexId *, bfs::GatherType *, bfs::VertexType, bfs::EdgeType, unsigned char *, unsigned char *, b40c::util::CtaWorkProgress, bfs::SizeT)
          detected during:
            instantiation of "void GASengine::vertex_centric::contract_atomic::SweepPass<KernelPolicy, Program, WORK_STEALING>::Invoke(int &, KernelPolicy::VertexId &, Program::VertexId &, Program::VertexId &, int &, int &, int *&, Program::VertexId *&, Program::VertexId *&, Program::VertexId *&, Program::GatherType *&, Program::VertexType &, Program::EdgeType &, unsigned char *&, KernelPolicy::VisitedMask *&, b40c::util::CtaWorkProgress &, b40c::util::CtaWorkDistribution<KernelPolicy::SizeT> &, KernelPolicy::SizeT &, KernelPolicy::SmemStorage &) [with KernelPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>, Program=bfs, WORK_STEALING=false]" 
(356): here
            instantiation of "void GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::Kernel(int &, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VertexId &, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VertexId &, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VertexId &, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VertexId &, int &, int &, int *&, int *&, volatile int *&, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VertexId *&, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VertexId *&, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::MiscType *&, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::GatherType *&, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VertexType &, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::EdgeType &, char *&, unsigned char *&, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VisitedMask *&, b40c::util::CtaWorkProgress &, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::SizeT &, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::SizeT &, b40c::util::KernelRuntimeStats &) [with KernelPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>, Program=bfs]" 
(403): here
            instantiation of "void GASengine::vertex_centric::contract_atomic::Kernel<KernelPolicy,Program>(int, KernelPolicy::VertexId, KernelPolicy::VertexId, KernelPolicy::VertexId, KernelPolicy::VertexId, int, int, int *, int *, volatile int *, KernelPolicy::VertexId *, KernelPolicy::VertexId *, Program::MiscType *, Program::GatherType *, Program::VertexType, Program::EdgeType, char *, unsigned char *, KernelPolicy::VisitedMask *, b40c::util::CtaWorkProgress, KernelPolicy::SizeT, KernelPolicy::SizeT, b40c::util::KernelRuntimeStats) [with KernelPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>, Program=bfs]" 
../../GASengine/enactor_vertex_centric.cuh(3783): here
            instantiation of "cudaError_t GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::EnactIterativeSearch<ExpandPolicy,ContractPolicy>(CsrProblem &, CsrProblem::SizeT *, int, int, int, int, int &, int &, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true, ExpandPolicy=GASengine::vertex_centric::expand_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 1, 9, 0, 0, 5, cg, NONE, NONE, cg, NONE, cg, false, 32, 512, 7>, ContractPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>]" 
../../GASengine/enactor_vertex_centric.cuh(4542): here
            instantiation of "cudaError_t GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::EnactIterativeSearch(CsrProblem &, CsrProblem::SizeT *, int, int, int *, int, int, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true]" 
bfs.cu(740): here

../../GASengine/vertex_centric/contract_atomic/cta.cuh(550): error: no instance of overloaded function "b40c::util::io::LoadTile<LOG_LOADS_PER_TILE, LOG_LOAD_VEC_SIZE, ACTIVE_THREADS, CACHE_MODIFIER, CHECK_ALIGNMENT>::LoadValid [with LOG_LOADS_PER_TILE=0, LOG_LOAD_VEC_SIZE=1, ACTIVE_THREADS=128, CACHE_MODIFIER=NONE, CHECK_ALIGNMENT=false]" matches the argument list
            argument types are: (bfs::VertexId [1][2], bfs::MiscType *, bfs::SizeT, const bfs::SizeT)
          detected during:
            instantiation of "void GASengine::vertex_centric::contract_atomic::Cta<KernelPolicy, Program>::ProcessTile(GASengine::vertex_centric::contract_atomic::Cta<KernelPolicy, Program>::SizeT, const GASengine::vertex_centric::contract_atomic::Cta<KernelPolicy, Program>::SizeT &) [with KernelPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>, Program=bfs]" 
../../GASengine/vertex_centric/contract_atomic/kernel.cuh(111): here
            instantiation of "void GASengine::vertex_centric::contract_atomic::SweepPass<KernelPolicy, Program, WORK_STEALING>::Invoke(int &, KernelPolicy::VertexId &, Program::VertexId &, Program::VertexId &, int &, int &, int *&, Program::VertexId *&, Program::VertexId *&, Program::VertexId *&, Program::GatherType *&, Program::VertexType &, Program::EdgeType &, unsigned char *&, KernelPolicy::VisitedMask *&, b40c::util::CtaWorkProgress &, b40c::util::CtaWorkDistribution<KernelPolicy::SizeT> &, KernelPolicy::SizeT &, KernelPolicy::SmemStorage &) [with KernelPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>, Program=bfs, WORK_STEALING=false]" 
../../GASengine/vertex_centric/contract_atomic/kernel.cuh(356): here
            instantiation of "void GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::Kernel(int &, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VertexId &, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VertexId &, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VertexId &, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VertexId &, int &, int &, int *&, int *&, volatile int *&, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VertexId *&, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VertexId *&, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::MiscType *&, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::GatherType *&, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VertexType &, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::EdgeType &, char *&, unsigned char *&, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VisitedMask *&, b40c::util::CtaWorkProgress &, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::SizeT &, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::SizeT &, b40c::util::KernelRuntimeStats &) [with KernelPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>, Program=bfs]" 
../../GASengine/vertex_centric/contract_atomic/kernel.cuh(403): here
            instantiation of "void GASengine::vertex_centric::contract_atomic::Kernel<KernelPolicy,Program>(int, KernelPolicy::VertexId, KernelPolicy::VertexId, KernelPolicy::VertexId, KernelPolicy::VertexId, int, int, int *, int *, volatile int *, KernelPolicy::VertexId *, KernelPolicy::VertexId *, Program::MiscType *, Program::GatherType *, Program::VertexType, Program::EdgeType, char *, unsigned char *, KernelPolicy::VisitedMask *, b40c::util::CtaWorkProgress, KernelPolicy::SizeT, KernelPolicy::SizeT, b40c::util::KernelRuntimeStats) [with KernelPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>, Program=bfs]" 
../../GASengine/enactor_vertex_centric.cuh(3783): here
            instantiation of "cudaError_t GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::EnactIterativeSearch<ExpandPolicy,ContractPolicy>(CsrProblem &, CsrProblem::SizeT *, int, int, int, int, int &, int &, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true, ExpandPolicy=GASengine::vertex_centric::expand_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 1, 9, 0, 0, 5, cg, NONE, NONE, cg, NONE, cg, false, 32, 512, 7>, ContractPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>]" 
../../GASengine/enactor_vertex_centric.cuh(4542): here
            instantiation of "cudaError_t GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::EnactIterativeSearch(CsrProblem &, CsrProblem::SizeT *, int, int, int *, int, int, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true]" 
bfs.cu(740): here

../../GASengine/vertex_centric/contract_atomic/cta.cuh(275): error: function "bfs::contract::operator()" cannot be called with the given argument list
            argument types are: (int, bfs::VertexId, unsigned char *, bfs::VertexId, bfs::VertexType, bfs::EdgeType, bfs::GatherType *, bfs::VertexId)
            object type is: bfs::contract
          detected during:
            instantiation of "void GASengine::vertex_centric::contract_atomic::Cta<KernelPolicy, Program>::Tile<LOG_LOADS_PER_TILE, LOG_LOAD_VEC_SIZE>::Iterate<LOAD, VEC, dummy>::VertexCull(GASengine::vertex_centric::contract_atomic::Cta<KernelPolicy, Program> *, GASengine::vertex_centric::contract_atomic::Cta<KernelPolicy, Program>::Tile<LOG_LOADS_PER_TILE, LOG_LOAD_VEC_SIZE> *) [with KernelPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>, Program=bfs, LOG_LOADS_PER_TILE=0, LOG_LOAD_VEC_SIZE=1, LOAD=0, VEC=0, dummy=0]" 
(450): here
            instantiation of "void GASengine::vertex_centric::contract_atomic::Cta<KernelPolicy, Program>::Tile<LOG_LOADS_PER_TILE, LOG_LOAD_VEC_SIZE>::VertexCull(GASengine::vertex_centric::contract_atomic::Cta<KernelPolicy, Program> *) [with KernelPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>, Program=bfs, LOG_LOADS_PER_TILE=0, LOG_LOAD_VEC_SIZE=1]" 
(561): here
            instantiation of "void GASengine::vertex_centric::contract_atomic::Cta<KernelPolicy, Program>::ProcessTile(GASengine::vertex_centric::contract_atomic::Cta<KernelPolicy, Program>::SizeT, const GASengine::vertex_centric::contract_atomic::Cta<KernelPolicy, Program>::SizeT &) [with KernelPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>, Program=bfs]" 
../../GASengine/vertex_centric/contract_atomic/kernel.cuh(111): here
            instantiation of "void GASengine::vertex_centric::contract_atomic::SweepPass<KernelPolicy, Program, WORK_STEALING>::Invoke(int &, KernelPolicy::VertexId &, Program::VertexId &, Program::VertexId &, int &, int &, int *&, Program::VertexId *&, Program::VertexId *&, Program::VertexId *&, Program::GatherType *&, Program::VertexType &, Program::EdgeType &, unsigned char *&, KernelPolicy::VisitedMask *&, b40c::util::CtaWorkProgress &, b40c::util::CtaWorkDistribution<KernelPolicy::SizeT> &, KernelPolicy::SizeT &, KernelPolicy::SmemStorage &) [with KernelPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>, Program=bfs, WORK_STEALING=false]" 
../../GASengine/vertex_centric/contract_atomic/kernel.cuh(356): here
            instantiation of "void GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::Kernel(int &, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VertexId &, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VertexId &, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VertexId &, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VertexId &, int &, int &, int *&, int *&, volatile int *&, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VertexId *&, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VertexId *&, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::MiscType *&, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::GatherType *&, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VertexType &, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::EdgeType &, char *&, unsigned char *&, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VisitedMask *&, b40c::util::CtaWorkProgress &, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::SizeT &, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::SizeT &, b40c::util::KernelRuntimeStats &) [with KernelPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>, Program=bfs]" 
../../GASengine/vertex_centric/contract_atomic/kernel.cuh(403): here
            instantiation of "void GASengine::vertex_centric::contract_atomic::Kernel<KernelPolicy,Program>(int, KernelPolicy::VertexId, KernelPolicy::VertexId, KernelPolicy::VertexId, KernelPolicy::VertexId, int, int, int *, int *, volatile int *, KernelPolicy::VertexId *, KernelPolicy::VertexId *, Program::MiscType *, Program::GatherType *, Program::VertexType, Program::EdgeType, char *, unsigned char *, KernelPolicy::VisitedMask *, b40c::util::CtaWorkProgress, KernelPolicy::SizeT, KernelPolicy::SizeT, b40c::util::KernelRuntimeStats) [with KernelPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>, Program=bfs]" 
../../GASengine/enactor_vertex_centric.cuh(3783): here
            instantiation of "cudaError_t GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::EnactIterativeSearch<ExpandPolicy,ContractPolicy>(CsrProblem &, CsrProblem::SizeT *, int, int, int, int, int &, int &, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true, ExpandPolicy=GASengine::vertex_centric::expand_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 1, 9, 0, 0, 5, cg, NONE, NONE, cg, NONE, cg, false, 32, 512, 7>, ContractPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>]" 
../../GASengine/enactor_vertex_centric.cuh(4542): here
            instantiation of "cudaError_t GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::EnactIterativeSearch(CsrProblem &, CsrProblem::SizeT *, int, int, int *, int, int, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true]" 
bfs.cu(740): here

../../GASengine/vertex_centric/contract_atomic/cta.cuh(275): error: function "bfs::contract::operator()" cannot be called with the given argument list
            argument types are: (int, bfs::VertexId, unsigned char *, bfs::VertexId, bfs::VertexType, bfs::EdgeType, bfs::GatherType *, bfs::VertexId)
            object type is: bfs::contract
          detected during:
            instantiation of "void GASengine::vertex_centric::contract_atomic::Cta<KernelPolicy, Program>::Tile<LOG_LOADS_PER_TILE, LOG_LOAD_VEC_SIZE>::Iterate<LOAD, VEC, dummy>::VertexCull(GASengine::vertex_centric::contract_atomic::Cta<KernelPolicy, Program> *, GASengine::vertex_centric::contract_atomic::Cta<KernelPolicy, Program>::Tile<LOG_LOADS_PER_TILE, LOG_LOAD_VEC_SIZE> *) [with KernelPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>, Program=bfs, LOG_LOADS_PER_TILE=0, LOG_LOAD_VEC_SIZE=1, LOAD=0, VEC=1, dummy=0]" 
(279): here
            instantiation of "void GASengine::vertex_centric::contract_atomic::Cta<KernelPolicy, Program>::Tile<LOG_LOADS_PER_TILE, LOG_LOAD_VEC_SIZE>::Iterate<LOAD, VEC, dummy>::VertexCull(GASengine::vertex_centric::contract_atomic::Cta<KernelPolicy, Program> *, GASengine::vertex_centric::contract_atomic::Cta<KernelPolicy, Program>::Tile<LOG_LOADS_PER_TILE, LOG_LOAD_VEC_SIZE> *) [with KernelPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>, Program=bfs, LOG_LOADS_PER_TILE=0, LOG_LOAD_VEC_SIZE=1, LOAD=0, VEC=0, dummy=0]" 
(450): here
            instantiation of "void GASengine::vertex_centric::contract_atomic::Cta<KernelPolicy, Program>::Tile<LOG_LOADS_PER_TILE, LOG_LOAD_VEC_SIZE>::VertexCull(GASengine::vertex_centric::contract_atomic::Cta<KernelPolicy, Program> *) [with KernelPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>, Program=bfs, LOG_LOADS_PER_TILE=0, LOG_LOAD_VEC_SIZE=1]" 
(561): here
            instantiation of "void GASengine::vertex_centric::contract_atomic::Cta<KernelPolicy, Program>::ProcessTile(GASengine::vertex_centric::contract_atomic::Cta<KernelPolicy, Program>::SizeT, const GASengine::vertex_centric::contract_atomic::Cta<KernelPolicy, Program>::SizeT &) [with KernelPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>, Program=bfs]" 
../../GASengine/vertex_centric/contract_atomic/kernel.cuh(111): here
            instantiation of "void GASengine::vertex_centric::contract_atomic::SweepPass<KernelPolicy, Program, WORK_STEALING>::Invoke(int &, KernelPolicy::VertexId &, Program::VertexId &, Program::VertexId &, int &, int &, int *&, Program::VertexId *&, Program::VertexId *&, Program::VertexId *&, Program::GatherType *&, Program::VertexType &, Program::EdgeType &, unsigned char *&, KernelPolicy::VisitedMask *&, b40c::util::CtaWorkProgress &, b40c::util::CtaWorkDistribution<KernelPolicy::SizeT> &, KernelPolicy::SizeT &, KernelPolicy::SmemStorage &) [with KernelPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>, Program=bfs, WORK_STEALING=false]" 
../../GASengine/vertex_centric/contract_atomic/kernel.cuh(356): here
            instantiation of "void GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::Kernel(int &, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VertexId &, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VertexId &, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VertexId &, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VertexId &, int &, int &, int *&, int *&, volatile int *&, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VertexId *&, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VertexId *&, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::MiscType *&, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::GatherType *&, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VertexType &, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::EdgeType &, char *&, unsigned char *&, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VisitedMask *&, b40c::util::CtaWorkProgress &, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::SizeT &, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::SizeT &, b40c::util::KernelRuntimeStats &) [with KernelPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>, Program=bfs]" 
../../GASengine/vertex_centric/contract_atomic/kernel.cuh(403): here
            instantiation of "void GASengine::vertex_centric::contract_atomic::Kernel<KernelPolicy,Program>(int, KernelPolicy::VertexId, KernelPolicy::VertexId, KernelPolicy::VertexId, KernelPolicy::VertexId, int, int, int *, int *, volatile int *, KernelPolicy::VertexId *, KernelPolicy::VertexId *, Program::MiscType *, Program::GatherType *, Program::VertexType, Program::EdgeType, char *, unsigned char *, KernelPolicy::VisitedMask *, b40c::util::CtaWorkProgress, KernelPolicy::SizeT, KernelPolicy::SizeT, b40c::util::KernelRuntimeStats) [with KernelPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>, Program=bfs]" 
../../GASengine/enactor_vertex_centric.cuh(3783): here
            instantiation of "cudaError_t GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::EnactIterativeSearch<ExpandPolicy,ContractPolicy>(CsrProblem &, CsrProblem::SizeT *, int, int, int, int, int &, int &, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true, ExpandPolicy=GASengine::vertex_centric::expand_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 1, 9, 0, 0, 5, cg, NONE, NONE, cg, NONE, cg, false, 32, 512, 7>, ContractPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>]" 
../../GASengine/enactor_vertex_centric.cuh(4542): here
            instantiation of "cudaError_t GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::EnactIterativeSearch(CsrProblem &, CsrProblem::SizeT *, int, int, int *, int, int, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true]" 
bfs.cu(740): here

../../GASengine/vertex_centric/contract_atomic/kernel.cuh(357): error: a reference of type "bfs::VertexId *&" (not const-qualified) cannot be initialized with a value of type "bfs::MiscType *"
          detected during:
            instantiation of "void GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::Kernel(int &, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VertexId &, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VertexId &, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VertexId &, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VertexId &, int &, int &, int *&, int *&, volatile int *&, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VertexId *&, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VertexId *&, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::MiscType *&, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::GatherType *&, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VertexType &, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::EdgeType &, char *&, unsigned char *&, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::VisitedMask *&, b40c::util::CtaWorkProgress &, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::SizeT &, GASengine::vertex_centric::contract_atomic::Dispatch<KernelPolicy, Program, true>::SizeT &, b40c::util::KernelRuntimeStats &) [with KernelPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>, Program=bfs]" 
(403): here
            instantiation of "void GASengine::vertex_centric::contract_atomic::Kernel<KernelPolicy,Program>(int, KernelPolicy::VertexId, KernelPolicy::VertexId, KernelPolicy::VertexId, KernelPolicy::VertexId, int, int, int *, int *, volatile int *, KernelPolicy::VertexId *, KernelPolicy::VertexId *, Program::MiscType *, Program::GatherType *, Program::VertexType, Program::EdgeType, char *, unsigned char *, KernelPolicy::VisitedMask *, b40c::util::CtaWorkProgress, KernelPolicy::SizeT, KernelPolicy::SizeT, b40c::util::KernelRuntimeStats) [with KernelPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>, Program=bfs]" 
../../GASengine/enactor_vertex_centric.cuh(3783): here
            instantiation of "cudaError_t GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::EnactIterativeSearch<ExpandPolicy,ContractPolicy>(CsrProblem &, CsrProblem::SizeT *, int, int, int, int, int &, int &, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true, ExpandPolicy=GASengine::vertex_centric::expand_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 1, 9, 0, 0, 5, cg, NONE, NONE, cg, NONE, cg, false, 32, 512, 7>, ContractPolicy=GASengine::vertex_centric::contract_atomic::KernelPolicy<bfs, GASengine::ProblemType<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, unsigned char, unsigned char, false, true>, 200, true, 0, true, 8, 7, 1, 0, 5, NONE, NONE, false, -1, 8>]" 
../../GASengine/enactor_vertex_centric.cuh(4542): here
            instantiation of "cudaError_t GASengine::EnactorVertexCentric<CsrProblem, Program, INSTRUMENT>::EnactIterativeSearch(CsrProblem &, CsrProblem::SizeT *, int, int, int *, int, int, int, int, int) [with CsrProblem=GASengine::CsrProblem<bfs, bfs::VertexId, bfs::SizeT, bfs::DataType, false, true>, Program=bfs, INSTRUMENT=true]" 
bfs.cu(740): here

13 errors detected in the compilation of "/tmp/tmpxft_0000493c_00000000-12_bfs.compute_35.cpp1.ii".
make: *** [BFS.o] Error 2
